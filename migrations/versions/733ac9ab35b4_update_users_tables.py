"""update users tables

Revision ID: 733ac9ab35b4
Revises: 74c1547d6c95
Create Date: 2025-09-15 16:32:06.093917

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '733ac9ab35b4'
down_revision: Union[str, Sequence[str], None] = '74c1547d6c95'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('plans',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('plan_type', sa.String(), nullable=False),
    sa.Column('storage_limit_mb', sa.Integer(), nullable=False),
    sa.Column('price_monthly', sa.Float(), nullable=False),
    sa.Column('price_yearly', sa.Float(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('storage_usage',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('used_storage_mb', sa.Float(), nullable=False),
    sa.Column('last_calculated', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('subscriptions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('plan_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('is_yearly', sa.Boolean(), nullable=False),
    sa.Column('stripe_subscription_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('users', sa.Column('storage_quota_mb', sa.Integer(), nullable=False))
    op.drop_column('users', 'storage_used')
    op.drop_column('users', 'storage_limit')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('storage_limit', sa.BIGINT(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('storage_used', sa.BIGINT(), autoincrement=False, nullable=True))
    op.drop_column('users', 'storage_quota_mb')
    op.drop_table('subscriptions')
    op.drop_table('storage_usage')
    op.drop_table('plans')
    # ### end Alembic commands ###
